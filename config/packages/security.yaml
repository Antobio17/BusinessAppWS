security:
  enable_authenticator_manager: true
  # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: auto
    App\Entity\User:
      algorithm: auto

  encoders:
    App\Entity\User:
      algorithm: auto

  # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
  providers:
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    api:
      pattern: ^/api
      stateless: true
      guard:
        authenticators:
          - lexik_jwt_authentication.jwt_token_authenticator

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/api/signin, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/signup, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/store/product/get, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/store/category/get, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/business/config/home/get, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/update/worker, roles: ROLE_WORKER }
    - { path: ^/api/get/worker, roles: ROLE_WORKER }
    - { path: ^/api/set/worker, roles: ROLE_WORKER }
    - { path: ^/api, roles: ROLE_USER }


when@test:
  security:
    password_hashers:
      # By default, password hashes are resource intensive and take time. This is
      # important to generate secure password hashes. In tests however, secure hashes
      # are not important, waste resources and increase test times. The following
      # reduces the work factor to the lowest possible values.
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: sha256
        cost: 4 # Lowest possible value for bcrypt
        time_cost: 3 # Lowest possible value for argon
        memory_cost: 10 # Lowest possible value for argon
